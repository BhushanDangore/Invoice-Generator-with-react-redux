{"version":3,"sources":["components/Navbar.js","components/Drawer.js","components/LoginForm.js","components/Users/Dashboard.js","action/index.js","action/types.js","components/Users/Profile.js","components/utils/Dialog.js","components/Users/ItemTable.js","components/Users/CreateInvoice.js","components/Users/ViewInvoices.js","App.js","reducers/index.js","reducers/userReducers.js","reducers/invoiceReducer.js","reducers/profileReducer.js","serviceWorker.js","index.js"],"names":["styles","root","flexGrow","menuButton","marginRight","createMuiTheme","spacing","title","linkFix","textDecoration","color","NavBar","classes","this","props","className","AppBar","position","Toolbar","IconButton","edge","aria-label","onClick","toggleDrawer","Typography","variant","user","Component","LoginButton","name","Link","href","Button","to","withRouter","connect","store","withStyles","Drawer","sideList","side","role","onKeyDown","List","ListItem","button","ListItemText","primary","SwipeableDrawer","anchor","open","left","onClose","onOpen","width","LoginForm","Fragment","Container","maxWidth","Card","Avatar","src","avatar","link","minWidth","minHeight","display","flexDirection","padding","margin","justifyContent","alignItems","height","Dashboard","state","Paper","component","Divider","style","marginTop","marginBottom","createInvoice","Invoice","dispatch","invoice","axios","get","params","then","res","data","status","type","payload","setProfileConfig","resetProfile","theme","flexFlow","saveBtn","breakpoints","down","box","Profile","isMessageDisplayed","currency","shopName","addressLine1","addressLine2","config","currencies","value","label","handleInputChange","e","target","setState","console","log","saveInputs","enqueueSnackbar","getProfile","CircularProgress","align","gutterBottom","Box","noValidate","autoComplete","TextField","id","fullWidth","onChange","select","helperText","map","option","MenuItem","key","profile","saveStatus","statusMessage","withSnackbar","AlertDialog","Dialog","handleClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","dividers","array","TableContainer","Table","size","TableHead","TableRow","TableCell","TableBody","row","index","_id","scope","item","quantity","cost","total","text","DialogActions","autoFocus","useStyles","makeStyles","customWidth","flex","noBorder","borderBottom","footerFix","roundoff","MaterialTableDemo","tax","handleItemListData","React","useState","columns","field","editable","openDialog","onRowAdd","newData","Promise","resolve","setTimeout","prevState","parseFloat","toFixed","push","calculateValues","onRowUpdate","oldData","indexOf","onRowDelete","splice","options","rowStyle","backgroundColor","actionsColumnIndex","search","minBodyHeight","loadingType","components","Cell","EditField","Pagination","colSpan","m","newtax","newroundoff","newtotal","forEach","Math","round","parseInt","items","container","flexWrap","textField","marginLeft","textFieldSmall","CreateInvoice","nameOfCustomer","costomerAddressLine","customerCity","customerState","customerCountry","date","Date","toISOString","invoiceTax","invoiceTotal","invoiceRoundoff","displayTime","getTime","split","feedDataIntoStore","storeData","length","placeholder","handleDateChange","event","persist","checkUser","InputLabelProps","shrink","defaultValue","interval","invoices","invoiceSaveStatus","table","StyledTableCell","head","palette","dark","common","white","body","fontSize","StyledTableRow","background","default","ViewInvoices","openItems","itemsArray","getInvoiceFailed","invoiceList","toString","openItemsDialog","nextProps","App","right","exact","path","reducers","combineReducers","action","invoiceSaveFailed","msg","Boolean","window","location","hostname","match","createStore","applyMiddleware","ThunkMiddleware","ReactDOM","render","maxSnack","anchorOrigin","vertical","horizontal","preventDuplicate","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d418309a.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport createMuiTheme from '@material-ui/core/styles/createMuiTheme'\r\nimport Link from '@material-ui/core/Link';\r\nimport { withRouter } from 'react-router';\r\nimport { connect } from 'react-redux';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\n\r\nconst theme = createMuiTheme();\r\n\r\nconst styles = {\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    linkFix: {\r\n        textDecoration: 'none',\r\n        color: \"white\"\r\n    }\r\n}\r\n\r\nclass NavBar extends Component {\r\n    render() {\r\n        const { classes } = this.props;\r\n        return (\r\n            <div className={classes.root}>\r\n                <AppBar position=\"static\">\r\n                    <Toolbar>\r\n                        <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\" onClick={this.props.toggleDrawer('left', true)}>\r\n                            <MenuIcon />\r\n                        </IconButton>\r\n                        <Typography variant=\"h6\" className={classes.title}>\r\n                            Inovoice Generator\r\n                        </Typography>\r\n                            <LoginButton user = {this.props.user} classes/>\r\n                    </Toolbar>\r\n                </AppBar>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst LoginButton = props => {\r\n    if(props.user.name === null) return null;\r\n    else if(props.user.name)\r\n    return (<Link href=\"/api/logout\" className = {props.classes.linkFix}>\r\n            <Button variant=\"outlined\" color=\"default\" >Logout</Button>\r\n        </Link>)\r\n    else\r\n    return (<RouterLink to=\"/login\" className = {props.classes.linkFix}>\r\n            <Button variant=\"outlined\" color=\"default\" >Login</Button>\r\n        </RouterLink>)\r\n} \r\n\r\nNavBar.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (store) => {\r\n    return (store);\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps)(withStyles(styles)(NavBar)));","import React, { Component } from 'react';\r\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport { Link } from 'react-router-dom';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux';\r\n\r\nconst styles = {\r\n    root: {\r\n        width: '230px',\r\n        marginRight: '4px',\r\n    },\r\n    linkFix: {\r\n        textDecoration: \"none\",\r\n        color: \"black\",\r\n    }\r\n}\r\nclass Drawer extends Component {\r\n\r\n    sideList = side => {\r\n        const { classes } = this.props;\r\n        return (<div\r\n            className={classes.root}\r\n            role=\"presentation\"\r\n            onClick={this.props.toggleDrawer(side, false)}\r\n            onKeyDown={this.props.toggleDrawer(side, false)}\r\n        >\r\n            <List>\r\n                <Link to=\"/dashboard\" className={classes.linkFix}>\r\n                    <ListItem button>\r\n                        <ListItemText primary=\"Dashboard\" />\r\n                    </ListItem>\r\n                </Link>\r\n                <Link to=\"/createinvoice\" className={classes.linkFix}>\r\n                    <ListItem button >\r\n                        <ListItemText primary=\"Create Invoice\" />\r\n                    </ListItem>\r\n                </Link>\r\n                <Link to=\"/viewinvoices\" className={classes.linkFix}>\r\n                    <ListItem button>\r\n                        <ListItemText primary=\"View Invoices\" />\r\n                    </ListItem>\r\n                </Link>\r\n                <Link to=\"/profile\" className={classes.linkFix}>\r\n                    <ListItem button>\r\n                        <ListItemText primary=\"Profile\" />\r\n                    </ListItem>\r\n                </Link>\r\n            </List>\r\n        </div>);\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <SwipeableDrawer\r\n                    anchor=\"left\"\r\n                    open={this.props.left}\r\n                    onClose={this.props.toggleDrawer('left', false)}\r\n                    onOpen={this.props.toggleDrawer('left', true)}\r\n                >\r\n                    {this.sideList('left')}\r\n                </SwipeableDrawer>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = (store) => {\r\n    return store;\r\n}\r\n\r\nexport default connect(mapStateToProps)(withStyles(styles)(Drawer));","import React, { Component } from 'react';\r\nimport { Container, Button, Card, Avatar, Typography, Link } from '@material-ui/core';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\n\r\nconst styles = {\r\n    root: {\r\n        minWidth: 250,\r\n        minHeight: 300,\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        padding: \"15px\",\r\n        margin: \"5px\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\"\r\n    },\r\n    link: {\r\n        height: \"3.5em\",\r\n        margin: \"10px 5px\",\r\n        minWidth: \"90%\",\r\n        display: \"flex\",\r\n    },\r\n    button: {\r\n        height: \"100%\",\r\n        width: \"100%\",\r\n    },\r\n    avatar: {\r\n        width: \"30%\",\r\n        height: \"auto\",\r\n        margin: \"25px 10px\"\r\n    }\r\n}\r\n\r\nclass LoginForm extends Component {\r\n    render() {\r\n        const { classes } = this.props;\r\n        return (<React.Fragment>\r\n            <Container maxWidth=\"sm\">\r\n                <Card className={classes.root}>\r\n                    <Avatar src=\"/icons/icons8-user-96.png\" className={classes.avatar} />\r\n                    <Typography color='primary' variant='h4'>Login With</Typography>\r\n                    <Link href=\"/api/login/facebook\" className={classes.link}>\r\n                        <Button variant=\"outlined\" color=\"primary\" className = {classes.button}>\r\n                            Facebook\r\n                        </Button>\r\n                    </Link>\r\n                    <Link href=\"/api/login/google\" className={classes.link}>\r\n                        <Button variant=\"outlined\" color=\"secondary\" className = {classes.button}>\r\n                            Google\r\n                        </Button>\r\n                    </Link>\r\n                </Card>\r\n            </Container>\r\n        </React.Fragment>);\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(LoginForm);","import React, { Component } from 'react';\r\nimport { Container, Paper, Typography, createMuiTheme, Divider } from '@material-ui/core';\r\nimport { connect } from 'react-redux';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst theme = createMuiTheme();\r\n\r\nconst styles = {\r\n    root: {\r\n        padding: theme.spacing(3, 2),\r\n    },\r\n}\r\n\r\nclass Dashboard extends Component {\r\n    state = {  }\r\n    render() { \r\n        const {classes} = this.props;\r\n        return ( <React.Fragment>\r\n            <Container>\r\n                <Paper className={classes.root}>\r\n                    <Typography variant=\"h5\" component=\"h3\">\r\n                        Dashboard\r\n                    </Typography>\r\n                    <Divider style = { {marginTop: 15, marginBottom: 15} }/>\r\n                    <Typography component=\"p\">\r\n                    \r\n                    </Typography>\r\n                </Paper>\r\n            </Container>\r\n        </React.Fragment> );\r\n    }\r\n}\r\n \r\nconst mapStateToProps = store => store;\r\n\r\nexport default connect(mapStateToProps)(withStyles(styles)(Dashboard));","import { GetUser, RemoveUser, CreateInvoice, ResetInvoiceSaveMsg, GetInvoices, GetProfileConfig, SetProfileConfig, ResetProfile } from './types';\r\nimport axios from 'axios';\r\n\r\nexport const getUser = () => {\r\n    return dispatch => {\r\n        axios.get(\"/api/currentuser\")\r\n            .then(res => { dispatch({ type: GetUser, payload: res.data }) })\r\n    }\r\n}\r\n\r\nexport const createInvoice = (Invoice) => {\r\n    return dispatch => {\r\n        let invoice = Invoice;\r\n        axios.get(\"/api/user/createinvoice\", {\r\n            params: invoice\r\n        }).then((res) => {\r\n            let invoice = Invoice;\r\n            if(res.data.status)\r\n            dispatch({ type: CreateInvoice, payload: {status: true, invoice } })\r\n            else\r\n            dispatch({ type: CreateInvoice, payload: {status: false, invoice } })\r\n        })\r\n    }\r\n}\r\n\r\nexport const getInvoices = () => {\r\n    console.log(\"GetInvoices Action dispatched\")\r\n    return dispatch => {\r\n        axios.get(\"/api/user/invoices\")\r\n        .then((res => {\r\n            if(res.data.invoices){\r\n                dispatch({ type: GetInvoices, payload: res.data.invoices });\r\n            }\r\n            else{\r\n                dispatch({type: GetInvoices, payload: res.data });\r\n            }\r\n        }))\r\n    }\r\n}\r\n\r\nexport const getProfileConfig = () => {\r\n    return dispatch => {\r\n        axios.get(\"/api/user/profileconfig\")\r\n        .then(res => {\r\n            dispatch({type: GetProfileConfig, payload: res.data})\r\n        })\r\n    }\r\n}\r\n\r\nexport const setProfileConfig = (data) => {\r\n    return dispatch => {\r\n        axios.get(\"/api/user/setprofileconfig\", { params: data })\r\n        .then((res) => {\r\n            dispatch({type: SetProfileConfig, payload: res.data})\r\n        })\r\n    }\r\n}\r\n\r\nexport const resetProfile = () => {\r\n    return {\r\n        type: ResetProfile,\r\n    }\r\n}\r\n\r\nexport const resetInvoiceCreateMsg = () => {\r\n    return {\r\n        type: ResetInvoiceSaveMsg\r\n    }\r\n}\r\n\r\nexport const removeUser = () => {\r\n    return({\r\n        type: RemoveUser,\r\n    })\r\n}","export const GetUser = \"GET_USER\";\r\nexport const RemoveUser = \"REMOVE_USER\";\r\nexport const CreateInvoice = \"CREATE_INVOICE\";\r\nexport const ResetInvoiceSaveMsg = \"RESTET_INVOICE_SAVE_MESSAGE\";\r\nexport const GetInvoices = \"GET_INVOICES\";\r\nexport const GetProfileConfig = \"GET_PROFILE_CONFIG\";\r\nexport const SetProfileConfig = \"SET_PROFILE_CONFIG\";\r\nexport const ResetProfile = \"RESET_PROFILE\"","import React, { Component } from 'react';\r\nimport { Container, Paper, Typography, createMuiTheme, Divider, TextField, Box, MenuItem, Button, CircularProgress } from '@material-ui/core';\r\nimport { connect } from 'react-redux';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { getProfileConfig, setProfileConfig, resetProfile } from './../../action/index';\r\nimport { withSnackbar } from 'notistack';\r\n\r\nconst theme = createMuiTheme();\r\n\r\nconst styles = {\r\n    root: {\r\n        padding: theme.spacing(3, 2),\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n        },\r\n        flexFlow: \"wrap\"\r\n    },\r\n    saveBtn: {\r\n        display: \"block\",\r\n        margin: \"auto\",\r\n        padding: \"1em 3em\",\r\n        [theme.breakpoints.down('md')]: {\r\n            width: \"100%\",\r\n        },\r\n    },\r\n    box: {\r\n        padding: \"15px 5px\",\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        [theme.breakpoints.down('md')]: {\r\n            flexDirection: \"column\",\r\n        },\r\n    }\r\n}\r\n\r\nclass Profile extends Component {\r\n    isMessageDisplayed = false;\r\n    state = {\r\n        currency: \"INR\",\r\n        shopName: \"\",\r\n        addressLine1: \"\",\r\n        addressLine2: \"\",\r\n        config: {},\r\n        isMessageDisplayed: false,\r\n    }\r\n    currencies = [{ value: 'USD', label: '$' }, { value: 'INR', label: '₹' }, { value: 'EUR', label: '€' }]\r\n\r\n    componentDidMount() {\r\n        console.log(\"Mounted\");\r\n        this.props.dispatch(getProfileConfig())\r\n    }\r\n\r\n    handleInputChange = e => {\r\n        switch(e.target.name){\r\n            case \"shopName\":\r\n                this.setState({shopName: e.target.value});\r\n                break;\r\n            case \"addressLine1\":\r\n                this.setState({addressLine1: e.target.value});\r\n                break;\r\n            case \"addressLine2\":\r\n                this.setState({addressLine2: e.target.value});\r\n                break;\r\n            case \"currency\":\r\n                this.setState({currency: e.target.value}); \r\n                break;   \r\n            default:\r\n                console.log(\"No Target For Input Found\");\r\n        }\r\n    }\r\n\r\n    saveInputs = () => {\r\n        const {shopName, addressLine1, addressLine2, currency} = this.state;\r\n        const data = {shopName, addressLine1, addressLine2, currency};\r\n        this.props.dispatch(resetProfile());\r\n        if(data.shopName && data.addressLine1 && data.addressLine2){\r\n            this.props.dispatch(setProfileConfig(data));\r\n        }\r\n        else this.props.enqueueSnackbar(\"Fill All The Data Fields\", {variant: \"warning\"});\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const profile = props.profile;\r\n        if (profile.config) {\r\n            const config = profile.config;\r\n            if (config.shopName) {\r\n                const { shopName, addressLine1, addressLine2 } = config;\r\n                if(shopName !== state.shopName && addressLine2 !== state.addressLine2 && addressLine1 !== state.addressLine1){\r\n                    props.dispatch(resetProfile());\r\n                    return { shopName, addressLine1, addressLine2 };\r\n                }\r\n            }\r\n            else if(profile.saveStatus){\r\n                props.enqueueSnackbar(profile.saveStatus, {variant: 'success'})\r\n                props.dispatch(resetProfile());\r\n            }\r\n            return null;\r\n        } else {\r\n            if(profile.config === null ){\r\n                props.enqueueSnackbar(profile.statusMessage, {variant: \"warning\"})\r\n                props.dispatch(resetProfile());\r\n                return null\r\n            }\r\n            if(profile.config === false ){\r\n                if(profile.statusMessage){\r\n                    props.enqueueSnackbar(profile.statusMessage, {variant: \"error\"});\r\n                    props.dispatch(resetProfile());\r\n                    return null;\r\n                }\r\n                if(profile.saveStatus){\r\n                    props.enqueueSnackbar(profile.saveStatus, {variant: 'info'});\r\n                    props.dispatch(resetProfile());\r\n                    return null;\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    render() {\r\n        const classes = this.props.classes;\r\n        return (<React.Fragment>\r\n            <Container>\r\n                <Paper className={classes.root}>\r\n                    <Typography variant=\"h5\" component=\"h3\">\r\n                        Profile\r\n                    </Typography>\r\n                    <Divider />\r\n                    {this.props.user == null ? null : this.getProfile(this.props.user, classes)}\r\n                </Paper>\r\n            </Container>\r\n        </React.Fragment>);\r\n    }\r\n\r\n    getProfile = (user, classes) => {\r\n        if (user.name === null) {\r\n            return <CircularProgress />;\r\n        }\r\n        if(user.name === false) {\r\n            return <Typography component=\"p\" align=\"center\" gutterBottom variant=\"h5\">Looks Like You Are Not Logged In</Typography>;\r\n        }\r\n        return (<React.Fragment>\r\n            <Box className={classes.box}>\r\n                <Typography component=\"p\" align=\"center\" gutterBottom variant=\"h5\">{\"Welcome, \" + user.name}</Typography>\r\n                <form className={classes.root} noValidate autoComplete=\"off\">\r\n                    <Typography component=\"p\" gutterBottom variant=\"h6\">Configure Your Profile</Typography>\r\n                    <TextField id=\"outlined-basic\" name=\"shopName\" label=\"Shop Name\" variant=\"outlined\" fullWidth value={this.state.shopName} onChange = {this.handleInputChange}/>\r\n                    <TextField id=\"outlined-basic\" name=\"addressLine1\" label=\"Address Line\" variant=\"outlined\" fullWidth value={this.state.addressLine1} onChange = {this.handleInputChange}/>\r\n                    <TextField id=\"outlined-basic\" name=\"addressLine2\" label=\"Address Line 2\" variant=\"outlined\" fullWidth value={this.state.addressLine2} onChange = {this.handleInputChange}/>\r\n                    <TextField\r\n                        id=\"outlined-select-currency\"\r\n                        name=\"currency\"\r\n                        select\r\n                        label=\"Select\"\r\n                        value={this.state.currency}\r\n                        onChange={this.handleInputChange}\r\n                        helperText=\"Please select your currency\"\r\n                        variant=\"outlined\"\r\n                    >\r\n                        {this.currencies.map(option => (\r\n                            <MenuItem key={option.value} value={option.value}>\r\n                                {option.label}\r\n                            </MenuItem>\r\n                        ))}\r\n                    </TextField>\r\n                    <Button variant=\"outlined\" color=\"primary\" className={classes.saveBtn} onClick = {this.saveInputs}>Save</Button>\r\n                </form>\r\n            </Box>\r\n        </React.Fragment>)\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (store) => store;\r\n\r\nexport default withStyles(styles)(withSnackbar(connect(mapStateToProps)(Profile)));","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nexport default function AlertDialog(props) {\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        fullWidth={true}\r\n        open={props.open}\r\n        onClose={props.handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">{props.title}</DialogTitle>\r\n        <DialogContent dividers={ true }>\r\n            { !props.array ? props.text : <TableContainer component={Paper}>\r\n                <Table size=\"medium\" aria-label=\"simple table\">\r\n                    <TableHead>\r\n                            <TableRow>\r\n                                <TableCell>Index</TableCell>\r\n                                <TableCell align=\"right\">Item Name</TableCell>\r\n                                <TableCell align=\"right\">Quantity</TableCell>\r\n                                <TableCell align=\"right\">Cost</TableCell>\r\n                                <TableCell align=\"right\">Total Bill</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {props.array.map( (row, index) => (\r\n                                <TableRow key={row._id}>\r\n                                <TableCell component=\"th\" scope=\"row\">{index+1}</TableCell>\r\n                                <TableCell align=\"right\">{row.item}</TableCell>\r\n                                <TableCell align=\"right\">{row.quantity}</TableCell>\r\n                                <TableCell align=\"right\">{row.cost}</TableCell>\r\n                                <TableCell align=\"right\">{row.total}</TableCell>\r\n                                </TableRow>\r\n                            ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>}\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={props.handleClose} color=\"primary\" autoFocus>\r\n            Okay\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport MaterialTable, { MTableEditField, MTableCell } from 'material-table';\r\nimport AlertDialog from '../utils/Dialog';\r\nimport {\r\n    Box,\r\n    TableCell,\r\n    Typography,\r\n    Divider,\r\n    makeStyles,\r\n} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles({\r\n    button: {\r\n        marginTop: '20px',\r\n        padding: '10px'\r\n    },\r\n    customWidth: {\r\n        width: \"100%\"\r\n    },\r\n    flex: {\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\",\r\n        padding: \"0.8rem\",\r\n    },\r\n    noBorder: {\r\n        borderBottom: \"0px\"\r\n    },\r\n    footerFix: {\r\n        display: \"block\",\r\n    },\r\n    roundoff: {\r\n        padding: \"4px 22px\"\r\n    },\r\n})\r\n\r\nexport default function MaterialTableDemo(props) {\r\n\r\n    let { tax, total, roundoff, handleItemListData } = props;\r\n\r\n    const classes = useStyles();\r\n\r\n    const [state, setState] = React.useState({\r\n        columns: [\r\n            { title: 'Item', field: 'item' },\r\n            { title: 'Quantity', field: 'quantity', type: 'numeric' },\r\n            { title: 'Cost/Item', field: 'cost', type: 'numeric' },\r\n            { title: 'total', field: 'total', type: 'numeric', editable: 'never' },\r\n        ],\r\n        data: [],\r\n        openDialog: false\r\n    });\r\n\r\n    function handleClose(){\r\n        setState(prevState => {\r\n            setState({...prevState, openDialog: false});\r\n        })\r\n    }\r\n\r\n    return (<React.Fragment>\r\n        <MaterialTable\r\n            title=\"Items\"\r\n            columns={state.columns}\r\n            data={state.data}\r\n            editable={{\r\n                onRowAdd: newData =>\r\n                    new Promise(resolve => {\r\n                        setTimeout(() => {\r\n                            resolve();\r\n                            setState(prevState => {\r\n                                const data = [...prevState.data];\r\n                                if (!newData.cost || !newData.quantity || !newData.item) {\r\n                                    setState({ ...prevState, openDialog: true });\r\n                                }\r\n                                else {\r\n                                    newData.cost = parseFloat(newData.cost);\r\n                                    newData.quantity = parseFloat(newData.quantity);\r\n                                    newData.total = parseFloat((newData.cost * newData.quantity).toFixed(2));\r\n                                    data.push(newData);\r\n                                    handleItemListData(calculateValues(data));\r\n                                    setState({ ...prevState, data });\r\n                                }\r\n                                return { ...prevState, data };\r\n                            });\r\n                        }, 200);\r\n                    }),\r\n                onRowUpdate: (newData, oldData) =>\r\n                    new Promise(resolve => {\r\n                        setTimeout(() => {\r\n                            resolve();\r\n                            if (oldData) {\r\n                                setState(prevState => {\r\n                                    if (!newData.cost || !newData.quantity || !newData.item) {\r\n                                        setState({ ...prevState, openDialog: true });\r\n                                    }\r\n                                    else{\r\n                                        const data = [...prevState.data];\r\n                                        newData.cost = parseFloat(newData.cost);\r\n                                        newData.quantity = parseFloat(newData.quantity);\r\n                                        newData.total = parseFloat((newData.cost * newData.quantity).toFixed(2));\r\n                                        data[data.indexOf(oldData)] = newData;\r\n                                        handleItemListData(calculateValues(data));\r\n                                        return { ...prevState, data };\r\n                                    }\r\n                                });\r\n                            }\r\n                        }, 200);\r\n                    }),\r\n                onRowDelete: oldData =>\r\n                    new Promise(resolve => {\r\n                        setTimeout(() => {\r\n                            resolve();\r\n                            setState(prevState => {\r\n                                const data = [...prevState.data];\r\n                                data.splice(data.indexOf(oldData), 1);\r\n                                handleItemListData(calculateValues(data));\r\n                                return { ...prevState, data };\r\n                            });\r\n                        }, 200);\r\n                    }),\r\n            }}\r\n            options={{\r\n                rowStyle: {\r\n                    backgroundColor: '#EEE',\r\n                },\r\n                actionsColumnIndex: 3,\r\n                search: false,\r\n                minBodyHeight: 300,\r\n                loadingType: \"linear\",\r\n            }}\r\n            components={{\r\n                Cell: props => (\r\n                    <MTableCell {...props} className={classes.noBorder} />\r\n                ),\r\n                EditField: props => (\r\n                    <MTableEditField {...props} className={classes.customWidth} />\r\n                ),\r\n                Pagination: props => (\r\n                    <TableCell colSpan={3} className={classes.footerFix}>\r\n                        <Box component=\"span\" m={1} className={classes.flex}>\r\n                            <Typography variant=\"h6\" component=\"span\" align={\"center\"}>Tax Ammount: </Typography>\r\n                            <Typography variant=\"h6\" component=\"span\" align={\"center\"}>{tax}</Typography>\r\n                        </Box>\r\n                        \r\n                        <Divider variant=\"middle\" />\r\n\r\n                        <Typography variant=\"button\" className = {classes.roundoff} component=\"div\" align={\"right\"}>Round Off &emsp;{roundoff}</Typography>\r\n\r\n                        <Divider variant=\"middle\" />\r\n\r\n                        <Box component=\"span\" m={1} className={classes.flex}>\r\n                            <Typography variant=\"h6\" component=\"span\" align={\"center\"}>Total Ammount: </Typography>\r\n                            <Typography variant=\"h5\" component=\"span\" align={\"center\"}>{total}</Typography>\r\n                        </Box>\r\n                    </TableCell>\r\n                ),\r\n            }}\r\n        />\r\n        <AlertDialog text={\"Please enter all data in items list\"} title={\"Invalid Input\"} open={state.openDialog} handleClose={handleClose} />\r\n        </React.Fragment>\r\n    );\r\n\r\n}\r\nfunction calculateValues(data) {\r\n    let newtotal = 0, newtax = 0, newroundoff = 0;\r\n    data.forEach((item) =>  newtotal = newtotal + item.total );\r\n    newtotal = parseFloat(newtotal.toFixed(2));\r\n    newtax = parseFloat(((newtotal / 100) * 28).toFixed(2));\r\n    newroundoff = parseFloat((Math.round(newtotal + newtax) - (newtotal + newtax)).toFixed(2));\r\n    newtotal = parseInt(Math.round(newtotal + newtax));\r\n    return { total: newtotal, tax: newtax, roundoff: newroundoff, items: data };\r\n}\r\n","import React, { Component } from 'react';\r\nimport {\r\n    Container,\r\n    Paper,\r\n    Typography,\r\n    createMuiTheme,\r\n    Divider,\r\n    TextField,\r\n    Button,\r\n} from '@material-ui/core';\r\nimport { connect } from 'react-redux';\r\nimport { withSnackbar } from 'notistack';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport AlertDialog from '../utils/Dialog';\r\nimport { createInvoice, resetInvoiceCreateMsg } from '../../action';\r\nimport MaterialTable from './ItemTable';\r\n\r\nconst theme = createMuiTheme();\r\nconst styles = {\r\n    root: {\r\n        display: 'flex',\r\n        flexFlow: 'column',\r\n        padding: theme.spacing(3, 2),\r\n    },\r\n    container: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        marginTop: theme.spacing(2)\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n        width: 220,\r\n        marginBottom: 25,\r\n    },\r\n    textFieldSmall: {\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n            width: 200,\r\n        },\r\n    },\r\n    button: {\r\n        marginTop: '20px',\r\n        padding: '10px'\r\n    },\r\n    customWidth: {\r\n        width: \"100%\"\r\n    },\r\n    flex: {\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\",\r\n        padding: \"0.8rem\",\r\n    },\r\n    noBorder: {\r\n        borderBottom: \"0px\"\r\n    },\r\n    footerFix: {\r\n        display: \"block\",\r\n    },\r\n};\r\n\r\nclass CreateInvoice extends Component {\r\n    \r\n    constructor(props){\r\n        super(props)\r\n        this.interval = null;\r\n    }\r\n\r\n    state = {\r\n        openDialog: false,\r\n        nameOfCustomer: \"\",\r\n        costomerAddressLine: \"\",\r\n        customerCity: \"\",\r\n        customerState: \"\",\r\n        customerCountry: \"\",\r\n        date: new Date().toISOString(),\r\n        items: [],\r\n        invoiceTax: 0,\r\n        invoiceTotal: 0,\r\n        invoiceRoundoff: 0,\r\n        displayTime: new Date(new Date().getTime() + 19800000).toISOString().split('.')[0]\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.setState({ openDialog: false })\r\n    }\r\n\r\n    feedDataIntoStore = () => {\r\n        let { nameOfCustomer, date, items, invoiceTotal, invoiceTax, invoiceRoundoff, customerCountry, customerState, customerCity, costomerAddressLine } = this.state;\r\n        const storeData = { nameOfCustomer, date, items, invoiceTotal, invoiceTax, invoiceRoundoff, customerCountry, customerState, customerCity, costomerAddressLine };\r\n        if (!nameOfCustomer || items.length === 0 || !date || !invoiceTotal || !invoiceTax ) this.setState({ openDialog: true });\r\n        else {\r\n            this.props.dispatch(createInvoice(storeData));\r\n        }\r\n    }\r\n\r\n    handleItemListData = (data) => {\r\n        setTimeout(() => this.setState({ invoiceTotal: data.total, invoiceTax: data.tax, invoiceRoundoff: data.roundoff, items: data.items }), 500);\r\n    }\r\n\r\n    handleInputChange = (e) => {\r\n        switch(e.target.placeholder){\r\n            case \"NameOfCustomer\":\r\n                this.setState({ nameOfCustomer: e.target.value }); \r\n                break;\r\n            case \"Address\": \r\n                this.setState({ costomerAddressLine: e.target.value }); \r\n                break;\r\n            case \"City\": \r\n                this.setState({ customerCity: e.target.value }); \r\n                break;\r\n            case \"State\": \r\n                this.setState({ customerState: e.target.value }); \r\n                break;\r\n            case \"Country\": \r\n                this.setState({ customerCountry: e.target.value }); \r\n                break;\r\n            default: console.log(\"Cannot Find matching Event\");\r\n        }\r\n    }\r\n    \r\n    handleDateChange = event => {\r\n        event.persist();\r\n        console.log(event.target.value);\r\n        console.log(this.state.date)\r\n        this.setState({\r\n            date: event.target.value.split('.')[0]+\".\"+this.state.date.split('.')[1]\r\n        })\r\n    };\r\n    render() {\r\n        const { classes } = this.props;\r\n        if(this.props.invoices.invoiceSaveStatus){\r\n            setTimeout(() => {\r\n                let { invoiceSaveStatus } = this.props.invoices;\r\n                this.props.enqueueSnackbar(invoiceSaveStatus, {\r\n                    variant: invoiceSaveStatus.search(\"Error\") === -1 ? \"success\" : \"error\"\r\n                });\r\n                this.props.dispatch(resetInvoiceCreateMsg())}, 600)\r\n        }\r\n        return (<React.Fragment>\r\n            <Container>\r\n                <Paper className={classes.root}>\r\n                    <Typography variant=\"h5\" component=\"h3\">\r\n                        Create Invoice\r\n                    </Typography>\r\n\r\n                    <Divider style={{ marginTop: 15, marginBottom: 15 }} />\r\n                    {this.props.user === null ? null : this.checkUser(this.props.user, classes)}\r\n                </Paper>\r\n            </Container>\r\n            <AlertDialog text={\"You Need To Provide All The Data To Create Invoice, Fields Can't Be Kept Empty\"} title={\"Can't Create Invoice\"} open={this.state.openDialog} handleClose={this.handleClose} />\r\n        </React.Fragment>);\r\n    }\r\n    checkUser = (user, classes) => {\r\n        if (user) {\r\n            return (<React.Fragment>\r\n                <TextField\r\n                    id=\"standard-full-width\"\r\n                    label=\"Name\"\r\n                    style={{ margin: 8 }}\r\n                    placeholder=\"NameOfCustomer\"\r\n                    margin=\"normal\"\r\n                    value={this.state.nameOfCustomer}\r\n                    onChange={this.handleInputChange}\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                />\r\n                <TextField\r\n                    id=\"standard-full-width\"\r\n                    label=\"Address of Customer\"\r\n                    style={{ margin: 8 }}\r\n                    placeholder=\"Address\"\r\n                    margin=\"normal\"\r\n                    value={this.state.costomerAddressLine}\r\n                    onChange={this.handleInputChange}\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                />\r\n                <form noValidate autoComplete=\"off\">\r\n                    <TextField id=\"standard-basic\" placeholder=\"City\" label=\"City\" className={classes.textFieldSmall} value = {this.state.customerCity} onChange={this.handleInputChange}/>\r\n                    <TextField id=\"standard-basic\" placeholder=\"State\" label=\"State\" className={classes.textFieldSmall} value = {this.state.customerState} onChange={this.handleInputChange}/>\r\n                    <TextField id=\"standard-basic\" placeholder=\"Country\" label=\"Country\" className={classes.textFieldSmall} value = {this.state.customerCountry} onChange={this.handleInputChange}/>\r\n                </form>\r\n                <form className={classes.container} noValidate>\r\n                    <TextField\r\n                        id=\"datetime-local\"\r\n                        label=\"Date And Time\"\r\n                        type=\"datetime-local\"\r\n                        defaultValue = {this.state.displayTime}\r\n                        className = {classes.textField}\r\n                        onChange = { this.handleDateChange }\r\n                        InputLabelProps={{\r\n                        shrink: true,\r\n                        }}\r\n                    />\r\n                </form>\r\n    \r\n                <MaterialTable tax={this.state.invoiceTax} total={this.state.invoiceTotal} roundoff={this.state.invoiceRoundoff} handleItemListData={this.handleItemListData} />\r\n    \r\n                <AlertDialog text={\"Please Enter All Data.....\"} title={\"Invalid Input\"} open={this.state.openDialog} handleClose={this.handleClose} />\r\n    \r\n                <Button variant=\"contained\" color=\"primary\" className={classes.button} onClick={this.feedDataIntoStore}>\r\n                    Create Invoice\r\n                </Button>\r\n            </React.Fragment>)\r\n        }\r\n        else {\r\n            return \"Please Login First\";\r\n        }\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = store => {\r\n    return store;\r\n};\r\n\r\nexport default connect(mapStateToProps)(withSnackbar(withStyles(styles)(CreateInvoice)));","import React, { Component } from 'react';\r\nimport { Container, Paper, Typography, createMuiTheme, Divider, Button } from '@material-ui/core';\r\nimport { connect } from 'react-redux';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport { withSnackbar } from 'notistack';\r\nimport Dialog from '../utils/Dialog';\r\nimport { getInvoices } from './../../action/index';\r\n\r\nconst theme = createMuiTheme();\r\nconst styles = {\r\n    root: {\r\n        padding: theme.spacing(3, 2),\r\n    },\r\n    table: {\r\n        minWidth: 700,\r\n    },\r\n}\r\n\r\nconst StyledTableCell = withStyles(theme => ({\r\n    head: {\r\n      backgroundColor: theme.palette.primary.dark,\r\n      color: theme.palette.common.white,\r\n    },\r\n    body: {\r\n      fontSize: 14,\r\n    },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles(theme => ({\r\n    root: { \r\n        '&:nth-of-type(odd)': {\r\n        backgroundColor: theme.palette.background.default,\r\n        },\r\n    },\r\n}))(TableRow);\r\n\r\nclass ViewInvoices extends Component {\r\n    state = {\r\n        openDialog: false,\r\n        invoices: [],\r\n        openItems: false,\r\n        itemsArray: [],\r\n\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.setState({ openDialog: false, openItems: false })\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.props.dispatch(getInvoices());\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps){\r\n        if(nextProps.invoices.invoiceList.length === this.state.invoices.length) return false;\r\n        return true;\r\n    }\r\n    \r\n    render() { \r\n        const { classes } = this.props;    \r\n        return ( <React.Fragment>\r\n            <Container>\r\n                <Paper className={classes.root}>\r\n                    <Typography variant=\"h5\" component=\"h3\">\r\n                        Invoice\r\n                    </Typography>\r\n                    <Divider style = { {marginTop: 15, marginBottom: 15} }/>\r\n                    { this.props.user == null ? null : this.getProfile(this.props.user, classes) }\r\n                </Paper>\r\n                <Dialog open = {this.state.openDialog} title = \"Items\" text = \"Something\" handleClose = {this.handleClose} />\r\n                <Dialog open = {this.state.openItems} title = \"Items\" handleClose = {this.handleClose} array = {this.state.itemsArray}/>\r\n            </Container>\r\n        </React.Fragment> );\r\n    }\r\n    getProfile = (user, classes) => {\r\n        if(!user.name) { return <Typography component=\"p\">It seems like you are not logged in</Typography> }\r\n        else{\r\n            if(this.props.invoices.getInvoiceFailed){\r\n                this.props.enqueueSnackbar(this.props.invoices.getInvoiceFailed, { variant: \"error\" })\r\n            }\r\n            else {\r\n                const { invoiceList } = this.props.invoices;\r\n                return ( <React.Fragment>    \r\n                    <TableContainer component={Paper}>\r\n                        <Table className={classes.table} aria-label=\"customized table\">\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <StyledTableCell>Name of Customer</StyledTableCell>\r\n                                    <StyledTableCell align=\"right\">Date</StyledTableCell>\r\n                                    <StyledTableCell align=\"right\">Items</StyledTableCell>\r\n                                    <StyledTableCell align=\"right\">Tax</StyledTableCell>\r\n                                    <StyledTableCell align=\"right\">Total</StyledTableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                            {invoiceList.map((row, index) => (\r\n                                <StyledTableRow key={row._id}>\r\n                                    <StyledTableCell component=\"th\" scope=\"row\">{row.nameOfCustomer}</StyledTableCell>\r\n                                    <StyledTableCell align=\"right\">{(new Date(row.date).toString()).split(\"GMT\")[0]}</StyledTableCell>\r\n                                    <StyledTableCell align=\"right\"><Button onClick = { (e) => { this.openItemsDialog(index)} }>Items</Button></StyledTableCell>\r\n                                    <StyledTableCell align=\"right\">{row.invoiceTax}</StyledTableCell>\r\n                                    <StyledTableCell align=\"right\">{row.invoiceTotal}</StyledTableCell>\r\n                                </StyledTableRow>\r\n                            ))}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                </React.Fragment> )\r\n            }\r\n        }\r\n    }\r\n    openItemsDialog = (index) => {\r\n        this.setState({openItems: true, itemsArray: this.props.invoices.invoiceList[index].items})\r\n    }\r\n}\r\n\r\nconst mapStateToProps = store => store;\r\n\r\nexport default withStyles(styles)(withSnackbar((connect(mapStateToProps)(ViewInvoices))));","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport NavBar from \"./components/Navbar\";\nimport Drawer from \"./components/Drawer\";\nimport LoginForm from './components/LoginForm';\nimport Dashboard from './components/Users/Dashboard';\nimport Profile from './components/Users/Profile'\nimport {\n    BrowserRouter as Router,\n    Route,\n} from \"react-router-dom\";\nimport { connect } from 'react-redux';\nimport { getUser } from './action'\nimport CreateInvoice from './components/Users/CreateInvoice';\nimport ViewInvoices from './components/Users/ViewInvoices';\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            right: false,\n            left: false\n        };\n    }\n    componentDidMount(){\n        this.props.dispatch(getUser());\n    }\n\n    toggleDrawer = (side, open) => event => {\n        if (event && event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n            return;\n        }\n        this.setState({ ...this.state, [side]: open });\n    };\n    render() {\n        return (\n            <React.Fragment>\n                <Router>\n                    <Drawer toggleDrawer={this.toggleDrawer} left={this.state.left} />\n                    <NavBar toggleDrawer={this.toggleDrawer} />\n                    <Route exact path=\"/login\"> <LoginForm /> </Route>\n                    <Route exact path=\"/dashboard\"> <Dashboard /> </Route> \n                    <Route exact path=\"/profile\"> <Profile /> </Route>\n                    <Route exact path=\"/createinvoice\"> <CreateInvoice /> </Route>\n                    <Route exact path=\"/viewinvoices\"> <ViewInvoices /> </Route>\n                </Router>\n            </React.Fragment>\n        );\n    }\n}\n\nfunction mapStateToProps(store) {\n    return store;\n}\n\nexport default connect(mapStateToProps)(App);\n","import { combineReducers } from \"redux\";\r\nimport { userReducer } from './userReducers.js';\r\nimport { InvoiceReducer } from './invoiceReducer';\r\nimport { profileReducer } from './profileReducer'\r\n\r\nexport const reducers = combineReducers({\r\n    user: userReducer,\r\n    invoices: InvoiceReducer,\r\n    profile: profileReducer,\r\n})","import { GetUser } from '../action/types'\r\n\r\nexport const userReducer = function(state = { name: null }, action ){\r\n    switch(action.type){\r\n        case GetUser:\r\n            return { name: action.payload.name };\r\n        default:\r\n            return state;\r\n    }\r\n}","import { CreateInvoice, ResetInvoiceSaveMsg, GetInvoices } from './../action/types';\r\n\r\nexport const InvoiceReducer = (state = { getInvoiceFailed: false, invoiceSaveStatus: false, invoiceList: []}, action) => {\r\n    switch(action.type){\r\n        case CreateInvoice:\r\n            let invoiceSaveStatus;\r\n            console.log(\"Payload \", action);\r\n            if(action.payload.status){\r\n                invoiceSaveStatus = `Invice of ${action.payload.invoice.nameOfCustomer} has been created sucessfully`;\r\n            }\r\n            else {\r\n                invoiceSaveStatus = `Error occured during invoice creation of ${action.payload.invoice.nameOfCustomer}`;\r\n            }\r\n            return { ...state, invoiceSaveStatus};\r\n\r\n        case ResetInvoiceSaveMsg:\r\n            return { ...state, invoiceSaveStatus: false};\r\n        \r\n        case GetInvoices:\r\n            let getInvoiceFailed;\r\n            if(action.payload.length > 0){\r\n                console.log(\"GetInvoices Action Reducerd by Reducer ACTION:\", action)\r\n                return { getInvoiceFailed: false, invoiceSaveFailed: false, invoiceList: [...action.payload] }\r\n            }\r\n            else {\r\n                getInvoiceFailed = \"Failed to get your invoices\";\r\n                return { getInvoiceFailed, invoiceList: [], invoiceSaveFailed: false };\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { GetProfileConfig, SetProfileConfig, ResetProfile } from \"../action/types\";\r\n\r\nexport const profileReducer = (state = {}, action) => {\r\n    switch(action.type){\r\n        case GetProfileConfig:\r\n            if(action.payload.status)\r\n                return {...state, config: action.payload.config, statusMessage: false };\r\n            else if(action.payload.status === null)\r\n                return {...state, config: null, statusMessage: action.payload.msg, saveStatus: false};\r\n            else\r\n                return {...state, config: false, statusMessage: action.payload.msg, saveStatus: false };\r\n            \r\n        \r\n        case SetProfileConfig:\r\n            if(action.payload.status){\r\n                return {...state, config: true, statusMessage: false, saveStatus: action.payload.msg};\r\n            } else{\r\n                return {...state, config: false, statusMessage: false, saveStatus: action.payload.msg};\r\n            }\r\n        case ResetProfile:\r\n            return {...state, config: false, statusMessage: false, saveStatus: false}\r\n        default: \r\n            return state;\r\n    }\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport ThunkMiddleware  from 'redux-thunk';\nimport { SnackbarProvider } from 'notistack';\n\nimport App from './App';\nimport { reducers } from './reducers'\nimport * as serviceWorker from './serviceWorker';\n\n\nconst store = createStore(reducers, applyMiddleware(ThunkMiddleware));\n\nReactDOM.render( \n    <Provider store = {store}>\n        <SnackbarProvider maxSnack={3} anchorOrigin={{\n        vertical: 'bottom',\n        horizontal: 'right',\n        preventDuplicate: true,\n    }}>\n            <App />\n        </SnackbarProvider>\n    </Provider>, \n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}