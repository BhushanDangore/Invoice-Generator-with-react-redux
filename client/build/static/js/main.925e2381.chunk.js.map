{"version":3,"sources":["components/Navbar.js","components/Drawer.js","components/LoginForm.js","components/Users/Dashboard.js","components/Users/Profile.js","action/index.js","action/types.js","components/utils/Dialog.js","components/Users/ItemTable.js","components/Users/CreateInvoice.js","components/Users/ViewInvoices.js","App.js","reducers/index.js","reducers/userReducers.js","reducers/invoiceReducer.js","serviceWorker.js","index.js"],"names":["styles","root","flexGrow","menuButton","marginRight","createMuiTheme","spacing","title","linkFix","textDecoration","color","NavBar","classes","this","props","className","AppBar","position","Toolbar","IconButton","edge","aria-label","onClick","toggleDrawer","Typography","variant","user","Component","LoginButton","Link","href","Button","to","withRouter","connect","store","withStyles","Drawer","sideList","side","role","onKeyDown","List","ListItem","button","ListItemText","primary","SwipeableDrawer","anchor","open","left","onClose","onOpen","width","LoginForm","console","log","Fragment","Container","maxWidth","Card","Avatar","src","avatar","link","minWidth","minHeight","display","flexDirection","padding","margin","justifyContent","alignItems","height","Dashboard","state","Paper","component","Divider","style","marginTop","marginBottom","Profile","name","createInvoice","invoice","type","payload","AlertDialog","Dialog","handleClose","aria-labelledby","aria-describedby","DialogTitle","id","DialogContent","DialogContentText","text","DialogActions","autoFocus","useStyles","makeStyles","customWidth","MaterialTableDemo","React","useState","dialogOpen","columns","field","editable","data","setState","onRowAdd","newData","Promise","resolve","setTimeout","prevState","cost","quantity","total","push","handleDateChange","onRowUpdate","oldData","indexOf","onRowDelete","splice","options","rowStyle","backgroundColor","actionsColumnIndex","search","paging","minBodyHeight","loadingType","components","EditField","theme","flexFlow","container","flexWrap","textField","marginLeft","CreateInvoice","openDialog","nameOfCustomer","date","Date","items","feedDataIntoStore","storeData","length","dispatch","handleItemListData","handleNameChange","e","target","value","newDate","invoices","TextField","label","placeholder","fullWidth","onChange","InputLabelProps","shrink","utils","DateFnsUtils","format","KeyboardButtonProps","ViewInvoices","App","event","key","right","axios","get","then","res","exact","path","reducers","combineReducers","action","Boolean","window","location","hostname","match","createStore","applyMiddleware","ThunkMiddleware","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.925e2381.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport createMuiTheme from '@material-ui/core/styles/createMuiTheme'\r\nimport Link from '@material-ui/core/Link';\r\nimport { withRouter } from 'react-router';\r\nimport { connect } from 'react-redux';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\n\r\nconst theme = createMuiTheme();\r\n\r\nconst styles = {\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    linkFix: {\r\n        textDecoration: 'none',\r\n        color: \"white\"\r\n    }\r\n}\r\n\r\nclass NavBar extends Component {\r\n    render() {\r\n        const { classes } = this.props;\r\n        return (\r\n            <div className={classes.root}>\r\n                <AppBar position=\"static\">\r\n                    <Toolbar>\r\n                        <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\" onClick={this.props.toggleDrawer('left', true)}>\r\n                            <MenuIcon />\r\n                        </IconButton>\r\n                        <Typography variant=\"h6\" className={classes.title}>\r\n                            Inovoice Generator\r\n                        </Typography>\r\n                            <LoginButton user = {this.props.user} classes/>\r\n                    </Toolbar>\r\n                </AppBar>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst LoginButton = props => {\r\n    if(props.user === null) return null;\r\n    else if(props.user)\r\n    return (<Link href=\"/api/logout\" className = {props.classes.linkFix}>\r\n            <Button variant=\"outlined\" color=\"default\" >Logout</Button>\r\n        </Link>)\r\n    else\r\n    return (<RouterLink to=\"/login\" className = {props.classes.linkFix}>\r\n            <Button variant=\"outlined\" color=\"default\" >Login</Button>\r\n        </RouterLink>)\r\n} \r\n\r\nNavBar.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (store) => {\r\n    return (store);\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps)(withStyles(styles)(NavBar)));","import React, { Component } from 'react';\r\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport { Link } from 'react-router-dom';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux';\r\n\r\nconst styles = {\r\n    root: {\r\n        width: '230px',\r\n        marginRight: '4px',\r\n    },\r\n    linkFix: {\r\n        textDecoration: \"none\",\r\n        color: \"black\",\r\n    }\r\n}\r\nclass Drawer extends Component {\r\n\r\n    sideList = side => {\r\n        const { classes } = this.props;\r\n        return (<div\r\n            className={classes.root}\r\n            role=\"presentation\"\r\n            onClick={this.props.toggleDrawer(side, false)}\r\n            onKeyDown={this.props.toggleDrawer(side, false)}\r\n        >\r\n            <List>\r\n                <Link to=\"/dashboard\" className={classes.linkFix}>\r\n                    <ListItem button>\r\n                        <ListItemText primary=\"Dashboard\" />\r\n                    </ListItem>\r\n                </Link>\r\n                <Link to=\"/createinvoice\" className={classes.linkFix}>\r\n                    <ListItem button >\r\n                        <ListItemText primary=\"Create Invoice\" />\r\n                    </ListItem>\r\n                </Link>\r\n                <Link to=\"/viewinvoices\" className={classes.linkFix}>\r\n                    <ListItem button>\r\n                        <ListItemText primary=\"View Invoices\" />\r\n                    </ListItem>\r\n                </Link>\r\n                <Link to=\"/profile\" className={classes.linkFix}>\r\n                    <ListItem button>\r\n                        <ListItemText primary=\"Profile\" />\r\n                    </ListItem>\r\n                </Link>\r\n            </List>\r\n        </div>);\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <SwipeableDrawer\r\n                    anchor=\"left\"\r\n                    open={this.props.left}\r\n                    onClose={this.props.toggleDrawer('left', false)}\r\n                    onOpen={this.props.toggleDrawer('left', true)}\r\n                >\r\n                    {this.sideList('left')}\r\n                </SwipeableDrawer>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = (store) => {\r\n    return store;\r\n}\r\n\r\nexport default connect(mapStateToProps)(withStyles(styles)(Drawer));","import React, { Component } from 'react';\r\nimport { Container, Button, Card, Avatar, Typography, Link } from '@material-ui/core';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\n\r\nconst styles = {\r\n    root: {\r\n        minWidth: 250,\r\n        minHeight: 300,\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        padding: \"15px\",\r\n        margin: \"5px\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\"\r\n    },\r\n    link: {\r\n        height: \"3.5em\",\r\n        margin: \"10px 5px\",\r\n        minWidth: \"90%\",\r\n        display: \"flex\",\r\n    },\r\n    button: {\r\n        height: \"100%\",\r\n        width: \"100%\",\r\n    },\r\n    avatar: {\r\n        width: \"30%\",\r\n        height: \"auto\",\r\n        margin: \"25px 10px\"\r\n    }\r\n}\r\n\r\nclass LoginForm extends Component {\r\n    render() {\r\n        const { classes } = this.props;\r\n        console.log(classes)\r\n        return (<React.Fragment>\r\n            <Container maxWidth=\"sm\">\r\n                <Card className={classes.root}>\r\n                    <Avatar src=\"/icons/icons8-user-96.png\" className={classes.avatar} />\r\n                    <Typography color='primary' variant='h4'>Login With</Typography>\r\n                    <Link href=\"/api/login/facebook\" className={classes.link}>\r\n                        <Button variant=\"outlined\" color=\"primary\" className = {classes.button}>\r\n                            Facebook\r\n                        </Button>\r\n                    </Link>\r\n                    <Link href=\"/api/login/google\" className={classes.link}>\r\n                        <Button variant=\"outlined\" color=\"secondary\" className = {classes.button}>\r\n                            Google\r\n                        </Button>\r\n                    </Link>\r\n                </Card>\r\n            </Container>\r\n        </React.Fragment>);\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(LoginForm);","import React, { Component } from 'react';\r\nimport { Container, Paper, Typography, createMuiTheme, Divider } from '@material-ui/core';\r\nimport { connect } from 'react-redux';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst theme = createMuiTheme();\r\n\r\nconst styles = {\r\n    root: {\r\n        padding: theme.spacing(3, 2),\r\n    },\r\n}\r\n\r\nclass Dashboard extends Component {\r\n    state = {  }\r\n    render() { \r\n        const {classes} = this.props;\r\n        return ( <React.Fragment>\r\n            <Container>\r\n                <Paper className={classes.root}>\r\n                    <Typography variant=\"h5\" component=\"h3\">\r\n                        Dashboard\r\n                    </Typography>\r\n                    <Divider style = { {marginTop: 15, marginBottom: 15} }/>\r\n                    <Typography component=\"p\">\r\n                    \r\n                    </Typography>\r\n                </Paper>\r\n            </Container>\r\n        </React.Fragment> );\r\n    }\r\n}\r\n \r\nconst mapStateToProps = store => store;\r\n\r\nexport default connect(mapStateToProps)(withStyles(styles)(Dashboard));","import React, { Component } from 'react';\r\nimport { Container, Paper, Typography, createMuiTheme, Divider } from '@material-ui/core';\r\nimport { connect } from 'react-redux';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst theme = createMuiTheme();\r\n\r\nconst styles = {\r\n    root: {\r\n        padding: theme.spacing(3, 2),\r\n    },\r\n}\r\n\r\nclass Profile extends Component {\r\n    render() {\r\n        const classes = this.props.classes;\r\n        return (<React.Fragment>\r\n            <Container>\r\n                <Paper className={classes.root}>\r\n                    <Typography variant=\"h5\" component=\"h3\">\r\n                        Profile\r\n                    </Typography>\r\n                    <Divider style = { {marginTop: 15, marginBottom: 15} }/>\r\n                    <Typography component=\"p\">\r\n                        { this.props.user == null ? null : getProfile(this.props.user) }\r\n                    </Typography>\r\n                </Paper>\r\n            </Container>\r\n        </React.Fragment>);\r\n    }\r\n}\r\n\r\nfunction getProfile(user){\r\n    if(!user) { return \"Please Login First\"; }\r\n    else return ( \"Welcome, \" + user.name )\r\n\r\n}\r\n\r\nconst mapStateToProps = (store) => store;\r\n\r\nexport default connect(mapStateToProps)(withStyles(styles)(Profile));","import { GetUser, RemoveUser, CreateInvoice } from './types';\r\nimport axios from 'axios';\r\n\r\nexport const getUser = () => {\r\n    return dispatch => {\r\n        axios.get(\"/api/currentuser\")\r\n            .then(res => {\r\n                dispatch({ type: GetUser, payload: res.data })}\r\n            )\r\n    }\r\n}\r\n\r\nexport const createInvoice = (invoice) => {\r\n    return {\r\n        type: CreateInvoice,\r\n        payload: invoice,\r\n    }\r\n}\r\n\r\nexport const removeUser = () => {\r\n    return({\r\n        type: RemoveUser,\r\n    })\r\n}","export const GetUser = \"GET_USER\";\r\nexport const RemoveUser = \"REMOVE_USER\";\r\nexport const CreateInvoice = \"CREATE_INVOICE\";","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nexport default function AlertDialog(props) {\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        open={props.open}\r\n        onClose={props.handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">{props.title}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            {props.text}\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={props.handleClose} color=\"primary\" autoFocus>\r\n            Okay\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport MaterialTable, { MTableEditField } from 'material-table';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AlertDialog from './../utils/Dialog';\r\n\r\nconst useStyles = makeStyles({\r\n  customWidth: {\r\n    width: \"100%\"\r\n  },\r\n});\r\n\r\nexport default function MaterialTableDemo(props) {\r\n    const classes = useStyles();\r\n    const [state, setState] = React.useState({\r\n        dialogOpen: false,\r\n        columns: [\r\n            { title: 'Item', field: 'item', },\r\n            { title: 'Quantity', field: 'quantity', type: 'numeric', },\r\n            { title: 'Cost/Item', field: 'cost', type: 'numeric', },\r\n            { title: 'Total', field: 'total', editable: \"never\", type: 'numeric', },\r\n        ],\r\n        data: [],\r\n    });\r\n    const handleClose = () => {\r\n        setState({dialogOpen: false, columns: state.columns, data: state.data});\r\n    }\r\n    return (\r\n        <React.Fragment>\r\n        <MaterialTable\r\n            title=\"Items\"\r\n            columns={state.columns}\r\n            data={state.data}\r\n            editable={{\r\n                onRowAdd: newData =>\r\n                    new Promise(resolve => {\r\n                        setTimeout(() => {\r\n                            resolve();\r\n                            setState(prevState => {\r\n                                const data = [...prevState.data];\r\n                                if(!newData.cost || !newData.quantity) \r\n                                setState({...prevState, dialogOpen: true})\r\n                                else{    \r\n                                    newData.total = newData.cost * newData.quantity;\r\n                                    data.push(newData);\r\n                                    props.handleDateChange(data);\r\n                                    return { ...prevState, data };\r\n                                }\r\n                                return { ...prevState, data }\r\n                            });\r\n                        }, 200);\r\n                    }),\r\n                onRowUpdate: (newData, oldData) =>\r\n                    new Promise(resolve => {\r\n                        setTimeout(() => {\r\n                            resolve();\r\n                            if (oldData) {\r\n                                setState(prevState => {\r\n                                    const data = [...prevState.data];\r\n                                    if(!newData.cost || !newData.quantity) \r\n                                    setState({...prevState, dialogOpen: true})\r\n                                    else{    \r\n                                        newData.total = newData.cost * newData.quantity;\r\n                                        data[data.indexOf(oldData)] = newData;\r\n                                        props.handleDateChange(data);\r\n                                        return { ...prevState, data };\r\n                                    }\r\n                                    return { ...prevState, data };\r\n                                });\r\n                            }\r\n                        }, 200);\r\n                    }),\r\n                onRowDelete: oldData =>\r\n                    new Promise(resolve => {\r\n                        setTimeout(() => {\r\n                            resolve();\r\n                            setState(prevState => {\r\n                                const data = [...prevState.data];\r\n                                data.splice(data.indexOf(oldData), 1);\r\n                                props.handleDateChange(data);\r\n                                return { ...prevState, data };\r\n                            });\r\n                        }, 200);\r\n                    }),\r\n            }}\r\n            options = {{\r\n                rowStyle: {\r\n                  backgroundColor: '#EEE',\r\n                },\r\n                actionsColumnIndex: 3,\r\n                search: false,\r\n                paging: false,\r\n                minBodyHeight: 350,\r\n                loadingType: \"linear\",\r\n            }}\r\n            components={{\r\n                EditField: props => (\r\n                    <MTableEditField {...props} className = {classes.customWidth} />\r\n                )\r\n            }}\r\n        >\r\n        </MaterialTable>\r\n        <AlertDialog text = {\"Please Enter All Data.....\"} title = {\"Invalid Input\"} open = {state.dialogOpen} handleClose = {handleClose}/>\r\n        </React.Fragment>\r\n    );\r\n}","import React, { Component } from 'react';\r\nimport {\r\n    Container,\r\n    Paper,\r\n    Typography,\r\n    createMuiTheme,\r\n    Divider,\r\n    TextField,\r\n    Button\r\n} from '@material-ui/core';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n    KeyboardDatePicker,\r\n    MuiPickersUtilsProvider\r\n  } from '@material-ui/pickers';\r\nimport { connect } from 'react-redux';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport ItemTable from './ItemTable';\r\nimport AlertDialog from '../utils/Dialog';\r\nimport { createInvoice } from '../../action';\r\n\r\nconst theme = createMuiTheme();\r\n\r\nconst styles = {\r\n    root: {\r\n        display: 'flex',\r\n        flexFlow: 'column',\r\n        padding: theme.spacing(3, 2),\r\n    },\r\n    container: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n        width: 220,\r\n        marginBottom: 20,\r\n    },\r\n    button: {\r\n        marginTop: '20px',\r\n        padding: '10px'\r\n    },\r\n\r\n}\r\n\r\n\r\nclass CreateInvoice extends Component {\r\n\r\n    state = {\r\n        openDialog: false,\r\n        nameOfCustomer: \"\",\r\n        date: new Date(),\r\n        items: []\r\n    }\r\n\r\n    componentDidUpdate(){\r\n        console.log(this.props.invoices)\r\n    }\r\n    handleClose = () => {\r\n        this.setState({openDialog: false})\r\n    }\r\n\r\n    feedDataIntoStore = () => {\r\n        const {nameOfCustomer, date, items} = this.state;\r\n        const storeData = {nameOfCustomer, date, items};\r\n        if(!nameOfCustomer || items.length === 0 || !date) this.setState({openDialog: true});\r\n        // console.log(storeData);\r\n        this.props.dispatch(createInvoice(storeData));\r\n    }\r\n\r\n    handleItemListData = (data) => {\r\n        setTimeout(() => this.setState({items: data}),400);\r\n    }\r\n\r\n    handleNameChange = (e) => {\r\n        this.setState({nameOfCustomer: e.target.value})\r\n    }\r\n    \r\n    handleDateChange = newDate => {\r\n        this.setState({\r\n            date: newDate\r\n        })\r\n    };\r\n    render() {\r\n        const { classes } = this.props;\r\n        return (<React.Fragment>\r\n            <Container>\r\n                <Paper className={classes.root}>\r\n                    \r\n                    <Typography variant=\"h5\" component=\"h3\">\r\n                        Create Invoice\r\n                    </Typography>\r\n                    \r\n                    <Divider style={{ marginTop: 15, marginBottom: 15 }} />\r\n                    \r\n                    <TextField\r\n                        id=\"standard-full-width\"\r\n                        label=\"Name\"\r\n                        style={{ margin: 8 }}\r\n                        placeholder=\"Name of Customer\"\r\n                        margin=\"normal\"\r\n                        fullWidth\r\n                        value= {this.state.nameOfCustomer}\r\n                        onChange = {this.handleNameChange}\r\n                        InputLabelProps={{\r\n                            shrink: true,\r\n                        }}\r\n                    />\r\n\r\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                        <KeyboardDatePicker    \r\n                            style={{ margin: 8, marginBottom: 20 }}\r\n                            margin=\"normal\"\r\n                            id=\"date-picker-dialog\"\r\n                            label=\"Date picker dialog\"\r\n                            format=\"dd/MM/yyyy\"\r\n                            value={this.state.date}\r\n                            onChange={this.handleDateChange}\r\n                            KeyboardButtonProps={{\r\n                                'aria-label': 'change date',\r\n                            }}\r\n                        />\r\n                    </MuiPickersUtilsProvider>\r\n\r\n                    <ItemTable handleDateChange = {this.handleItemListData}/>\r\n                    \r\n                    <Button variant=\"contained\" color=\"primary\" className = {classes.button} onClick = {this.feedDataIntoStore}>\r\n                        Create Invoice\r\n                    </Button>\r\n                </Paper>\r\n            </Container>\r\n            <AlertDialog text = {\"You Need To Provide All The Data To Create Invoice, Fields Can't Be Kept Empty\"} title = {\"Can't Create Invoice\"} open = {this.state.openDialog} handleClose = {this.handleClose}/>\r\n        </React.Fragment>);\r\n    }\r\n}\r\n\r\nconst mapStateToProps = store => store;\r\n\r\nexport default connect(mapStateToProps)(withStyles(styles)(CreateInvoice));","import React, { Component } from 'react';\r\nimport { Container, Paper, Typography, createMuiTheme, Divider } from '@material-ui/core';\r\nimport { connect } from 'react-redux';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst theme = createMuiTheme();\r\n\r\nconst styles = {\r\n    root: {\r\n        padding: theme.spacing(3, 2),\r\n    },\r\n}\r\n\r\n\r\nclass ViewInvoices extends Component {\r\n    render() { \r\n        const { classes } = this.props;\r\n        return ( <React.Fragment>\r\n            <Container>\r\n                <Paper className={classes.root}>\r\n                    <Typography variant=\"h5\" component=\"h3\">\r\n                        Invoice\r\n                    </Typography>\r\n                    <Divider style = { {marginTop: 15, marginBottom: 15} }/>\r\n                    <Typography component=\"p\">\r\n                        {/* { this.props.user == null ? null : getProfile(this.props.user) } */}\r\n                    </Typography>\r\n                </Paper>\r\n            </Container>\r\n        </React.Fragment> );\r\n    }\r\n}\r\n \r\nconst mapStateToProps = store => store;\r\n\r\nexport default connect(mapStateToProps)(withStyles(styles)(ViewInvoices));","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport NavBar from \"./components/Navbar\";\nimport Drawer from \"./components/Drawer\";\nimport LoginForm from './components/LoginForm';\nimport Dashboard from './components/Users/Dashboard';\nimport Profile from './components/Users/Profile'\nimport {\n    BrowserRouter as Router,\n    Route,\n} from \"react-router-dom\";\nimport { connect } from 'react-redux';\nimport { getUser } from './action'\nimport CreateInvoice from './components/Users/CreateInvoice';\nimport ViewInvoices from './components/Users/ViewInvoices';\n\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            right: false,\n            left: false\n        };\n    }\n    componentDidMount(){\n        this.props.dispatch(getUser());\n    }\n\n    toggleDrawer = (side, open) => event => {\n        if (event && event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n            return;\n        }\n        this.setState({ ...this.state, [side]: open });\n    };\n    render() {\n        return (\n            <React.Fragment>\n                <Router>\n                    <Drawer toggleDrawer={this.toggleDrawer} left={this.state.left} />\n                    <NavBar toggleDrawer={this.toggleDrawer} />\n                    <Route exact path=\"/login\"> <LoginForm /> </Route>\n                    <Route exact path=\"/dashboard\"> <Dashboard /> </Route> \n                    <Route exact path=\"/profile\"> <Profile /> </Route>\n                    <Route exact path=\"/createinvoice\"> <CreateInvoice /> </Route>\n                    <Route exact path=\"/viewinvoices\"> <ViewInvoices /> </Route>\n                </Router>\n            </React.Fragment>\n        );\n    }\n}\n\nfunction mapStateToProps(store) {\n    return store;\n}\n\nexport default connect(mapStateToProps)(App);\n","import { combineReducers } from \"redux\";\r\nimport { userReducer } from './userReducers.js';\r\nimport { InvoiceReducer } from './invoiceReducer';\r\n\r\nexport const reducers = combineReducers({\r\n    user: userReducer,\r\n    invoices: InvoiceReducer,\r\n})","import { GetUser, RemoveUser } from '../action/types'\r\n\r\nexport const userReducer = function(state = null, action ){\r\n    switch(action.type){\r\n        case GetUser:\r\n            return action.payload.user;\r\n        case RemoveUser:\r\n            return false;\r\n        default:\r\n            return null;\r\n    }\r\n}","import { CreateInvoice } from './../action/types';\r\n\r\nexport const InvoiceReducer = (state = [], action) => {\r\n    switch(action.type){\r\n        case CreateInvoice:\r\n            console.log(action.payload);\r\n            return [...state, action.payload];\r\n        default:\r\n            return state;\r\n    }\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport ThunkMiddleware  from 'redux-thunk';\n\nimport App from './App';\nimport { reducers } from './reducers'\nimport * as serviceWorker from './serviceWorker';\n\n\nconst store = createStore(reducers, applyMiddleware(ThunkMiddleware));\n\nReactDOM.render( \n    <Provider store = {store}>\n        <App />\n    </Provider>, \n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}